/****************************************************************************/
/***                                                                      ***/
/***   header file generated by ASC 1.63 - altona shader compiler.        ***/
/***                                                                      ***/
/****************************************************************************/

#ifndef HEADER_UTIL_SHADERS_ASC
#define HEADER_UTIL_SHADERS_ASC

#include "base/graphics.hpp"

/****************************************************************************/

enum sSimpleMaterialVSPerm
{
  sSimpleMaterialVSPermMask_Color           = 0x0001,
  sSimpleMaterialVSPermMask_UV0             = 0x0002,
  sSimpleMaterialVSPermMask_UV1             = 0x0004,
  sSimpleMaterialVSPermMask_Light           = 0x0008,
};
enum sSimpleMaterialPSPerm
{
  sSimpleMaterialPSPerm_T0Off               = 0x0000,
  sSimpleMaterialPSPerm_T0Mul               = 0x0001,
  sSimpleMaterialPSPermMask_T0              = 0x0001,
  sSimpleMaterialPSPerm_T1Off               = 0x0000,
  sSimpleMaterialPSPerm_T1Mul               = 0x0002,
  sSimpleMaterialPSPerm_T1Add               = 0x0004,
  sSimpleMaterialPSPermMask_T1              = 0x0006,
};
enum sYUVMaterialVSPerm
{
  sYUVMaterialVSPermMask_Color              = 0x0001,
};
enum sYUVMaterialPSPerm
{
  sYUVMaterialPSPermMask_AlphaTex           = 0x0001,
};

/****************************************************************************/

struct sSimpleMaterialPara
{
public:
  sMatrix44 mvp;
  sMatrix34CM mv;
  sMatrix34CM m;
  sVector4 proj0;
  sVector4 proj1;
  static const sInt RegStart = 0;
  static const sInt RegCount = 12;
  static const sInt Slot = sCBUFFER_VS|0;
#line 28 "shaders.asc"
  void Set(const sViewport &view);
#line 56 "shaders.hpp"
};

struct sSimpleMaterialEnvPara
{
public:
  sMatrix44 mvp;
  sMatrix34CM mv;
  sMatrix34CM m;
  sVector4 proj0;
  sVector4 proj1;
  sVector4 ld[3];
  sVector4 la;
  sVector4 lc[4];
  static const sInt RegStart = 0;
  static const sInt RegCount = 20;
  static const sInt Slot = sCBUFFER_VS|0;
#line 57 "shaders.asc"
  void Set(const sViewport &view,const sMaterialEnv &env);
#line 75 "shaders.hpp"
};


/****************************************************************************/

class sSimpleMaterial : public sMaterial
{
  static sShader *VS(sInt);
  static sShader *PS(sInt);
public:
  sSimpleMaterial();
  void SelectShaders(sVertexFormatHandle *);
#line 111 "shaders.asc"

    sBool AddTex1;
  
#line 92 "shaders.cpp"
};
class sCubeMaterial : public sMaterial
{
  static sShader *VS();
  static sShader *PS();
public:
  void SelectShaders(sVertexFormatHandle *);
};
class sYUVMaterial : public sMaterial
{
  static sShader *VS(sInt);
  static sShader *PS(sInt);
public:
  void SelectShaders(sVertexFormatHandle *);
#line 273 "shaders.asc"

    void Set(sCBufferBase *cb) { sMaterial::Set(cb); }
  
#line 111 "shaders.cpp"
};

/****************************************************************************/

#endif

